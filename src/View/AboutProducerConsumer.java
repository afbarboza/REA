/*
 *   Author: Alex Frederico Ramos Barboza <alex.barboza@usp.br>
 *   Author: Bruno Stefano <bruno.stefano@usp.br>
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *   
 */
package View;

public class AboutProducerConsumer extends javax.swing.JFrame {

    private static AboutProducerConsumer instance;

    private static String portugueseTitleMessageBox;
    private static String portugueseStringMessage;
    private static String englishTitleMessageBox;
    private static String englishStringMessage;
    private static boolean canReturn;

    /**
     * Creates new form MessageSleep
     */
    private AboutProducerConsumer() {
        initComponents();
        portugueseTitleMessageBox = "Como usar este programa: ";
        portugueseStringMessage = "<html> "
                                + "<ul>"
                                    + "<li>O Program Counter e a linha selecionada em azul indicam a próxima linha de código a ser executada<p><br></li>"
                                    + "<li>Count é o tamanho do atual do buffer, <b>uma variável global desprotegida</b><p><br></li>"
                                    + "<li>Clique em 'Produtor' para executar a próxima linha do Produtor<p><br></li>"
                                    + "<li>Clique em 'Consumidor' para executar a próxima linha do Consumidor<p><br></li>"
                                    + "<li>Observe o efeito que o escalonamento surte no buffer<p><br></li>"
                                    + "<li>Observe o efeito que o escalonamento surte no contexto da thread<p><br></li>"
                                    + "<li>Quando quiser desfazer o escalonamento, clique em 'Retornar'<p><br></li>"
                                    + "<li>O modo Verbose explica mais detalhadamente as ações de cada thread<p><br></li>"
                                + "</ul>"
                                + "</html>";
        
        englishTitleMessageBox = "How to use this program: ";
        englishStringMessage = "<html> "
                                + "<ul>"
                                    + "<li>The Program Counter and the selected line in blue indicate the next line of code to be executed<p><br></li>"
                                    + "<li>Count is the current buffer size, <b> unprotected global variable </b><p><br></li>"
                                    + "<li>Click 'Producer' to run the next line of Producer<p><br></li>"
                                    + "<li>Click on 'Consumer' to execute the next line Consumer<p><br></li>"
                                    + "<li>Note the effect that scheduling has on the buffer<p><br></li>"
                                    + "<li>Note the effect that scheduling has on context of each thread<p><br></li>"
                                    + "<li>When you want to undo the scheduling , click ' Back '<p><br></li>"
                                    + "<li>The Verbose mode explains in more detail the actions of each thread<p><br></li>"
                                + "</ul>"
                                + "</html>";
        this.setResizable(false);
    }

    private static AboutProducerConsumer getInstance() {
        if (instance == null) {
            instance = new AboutProducerConsumer();
        }
        return instance;
    }

    public static void showEnglishInstance() {
        AboutProducerConsumer.canReturn = false;
        AboutProducerConsumer.getInstance().jLabel1.setText(englishStringMessage);
        AboutProducerConsumer.getInstance().jLabel3.setText(englishTitleMessageBox);
        AboutProducerConsumer.getInstance().setEnabled(true);
        AboutProducerConsumer.getInstance().setVisible(true);
    }

    public static void showPortugueseInstance() {
        AboutProducerConsumer.getInstance().jLabel1.setText(portugueseStringMessage);
        AboutProducerConsumer.getInstance().jLabel3.setText(portugueseTitleMessageBox);
        AboutProducerConsumer.getInstance().setEnabled(true);
        AboutProducerConsumer.getInstance().setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("FreeMono", 0, 16)); // NOI18N
        jLabel1.setText("O buffer está vazio. Está thread irá dormir");

        jLabel3.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel3.setText("Buffer Vazio!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(402, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AboutProducerConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AboutProducerConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AboutProducerConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AboutProducerConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AboutProducerConsumer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
